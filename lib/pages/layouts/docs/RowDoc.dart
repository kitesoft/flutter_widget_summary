class RowDoc{
  ///MainAxisAlignment：主轴方向上的对齐方式，会对child的位置起作用，默认是start。
  ///其中MainAxisAlignment枚举值：
  ///
  ///center：将children放置在主轴的中心；
  ///end：将children放置在主轴的末尾；
  ///spaceAround：将主轴方向上的空白区域均分，使得children之间的空白区域相等，但是首尾child的空白区域为1/2；
  ///spaceBetween：将主轴方向上的空白区域均分，使得children之间的空白区域相等，首尾child都靠近首尾，没有间隙；
  ///spaceEvenly：将主轴方向上的空白区域均分，使得children之间的空白区域相等，包括首尾child；
  ///start：将children放置在主轴的起点；
  ///
  ///其中spaceAround、spaceBetween以及spaceEvenly的区别，就是对待首尾child的方式。其距离首尾的距离分别是空白区域的1/2、0、1。
  ///MainAxisSize：在主轴方向占有空间的值，默认是max。
  ///MainAxisSize的取值有两种：
  ///
  ///max：根据传入的布局约束条件，最大化主轴方向的可用空间；
  ///min：与max相反，是最小化主轴方向的可用空间；
  ///
  ///CrossAxisAlignment：children在交叉轴方向的对齐方式，与MainAxisAlignment略有不同。
  ///CrossAxisAlignment枚举值有如下几种：
  ///
  ///baseline：在交叉轴方向，使得children的baseline对齐；
  ///center：children在交叉轴上居中展示；
  ///end：children在交叉轴上末尾展示；
  ///start：children在交叉轴上起点处展示；
  ///stretch：让children填满交叉轴方向；
  ///
  ///TextDirection：阿拉伯语系的兼容设置，一般无需处理。
  ///VerticalDirection：定义了children摆放顺序，默认是down。
  ///VerticalDirection枚举值有两种：
  ///
  ///down：从top到bottom进行布局；
  ///up：从bottom到top进行布局。
  ///
  ///top对应Row以及Column的话，就是左边和顶部，bottom的话，则是右边和底部。
  ///TextBaseline：使用的TextBaseline的方式，有两种，前面已经介绍过。
}